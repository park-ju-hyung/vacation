<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.vacation.mvc.mapper.ManageMapper">
	<!-- 신청자 정보 + 휴가 데이터 가져오기-->
	<select id="breakVO" parameterType="com.example.vacation.mvc.dto.BreakDTO"
			resultType="com.example.vacation.mvc.vo.BreakVO">
		SELECT
			holidayId,
			empName,
			DATE_FORMAT(empBirth, '%Y-%m-%d') as empBirth,
			empNo,
			position,
			department,
			DATE_FORMAT(startDate, '%Y-%m-%d') as startDate,
			DATE_FORMAT(endDate, '%Y-%m-%d') as endDate,
			useDays,
			type,
			totalDays,
			reason,
			rejectReason,
			approval,
			regDate,
			status
		FROM break
		WHERE holidayId = #{holidayId}
	</select>

	<!--리스트-->
	<sql id="basicTable">
		SELECT ROW_NUMBER() OVER(order by regDate) AS seq,
			   holidayId,
			   empName,
			   DATE_FORMAT(empBirth, '%Y-%m-%d') as empBirth,
			   empNo,
			   empBirth,
			   position,
			   DATE_FORMAT(startDate, '%Y-%m-%d') as startDate,
			   DATE_FORMAT(endDate, '%Y-%m-%d') as endDate,
			   useDays,
			   type,
			   totalDays,
			   reason,
			   rejectReason,
			   approval,
			   regDate,
			   status
		FROM break
	</sql>

	<sql id="where">
		WHERE 1=1
		<if test="schDtStart != '' and schDtStart != null">
			AND DATE_FORMAT(regDate, '%Y-%m-%d') <![CDATA[>=]]> #{schDtStart}
		</if>
		<if test="schDtEnd != '' and schDtEnd != null">
			AND DATE_FORMAT(regDate, '%Y-%m-%d') <![CDATA[<=]]> #{schDtEnd}
		</if>
		<if test="schDtStart2 != '' and schDtStart2 != null">
			AND DATE_FORMAT(startDate, '%Y-%m-%d') <![CDATA[>=]]> #{schDtStart}
		</if>
		<if test="schDtEnd2 != '' and schDtEnd2 != null">
			AND DATE_FORMAT(endDate, '%Y-%m-%d') <![CDATA[<=]]> #{schDtEnd}
		</if>
		<if test="empName != null and empName != ''">
			AND empName LIKE CONCAT('%', #{empName}, '%')
		</if>
	</sql>

	<select id="manageCount" parameterType="com.example.vacation.mvc.dto.BreakDTO" resultType="integer">
		SELECT count(*) FROM break
		<include refid="where"/>
	</select>

	<select id="manageList" parameterType="com.example.vacation.mvc.dto.BreakDTO"
			resultType="com.example.vacation.mvc.vo.BreakVO">
		<include refid="basicTable"/>
		<include refid="where"/>
		ORDER BY seq DESC
		LIMIT #{pageSize} OFFSET #{pageOffset}
	</select>

	<!--001:임시저장,002:제출,003:반려,004:승인-->
	<!--제출 처리-->
	<update id="requestBreak" parameterType="com.example.vacation.mvc.dto.BreakDTO">
		UPDATE break
		SET status = '002',
			approval = '제출'
		WHERE empNo = #{empNo}
		  AND holidayId = #{holidayId}
	</update>

	<!--반려 처리-->
	<update id="returnBreak" parameterType="com.example.vacation.mvc.dto.BreakDTO">
		UPDATE break
		SET status = '003',
			approval = '반려',
			rejectReason = #{rejectReason}
		WHERE empNo = #{empNo}
		  AND holidayId = #{holidayId}
	</update>

	<!--승인 처리-->
	<update id="confirmBreak" parameterType="com.example.vacation.mvc.dto.BreakDTO">
		UPDATE break
		SET status = '004',
		    approval = '승인'
		WHERE empNo = #{empNo}
		AND holidayId = #{holidayId}
	</update>




</mapper>
