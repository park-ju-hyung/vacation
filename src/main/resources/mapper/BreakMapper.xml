<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.vacation.mvc.mapper.BreakMapper">

	<!--휴가 신청-->
	<insert id="insertBreak" parameterType="com.example.vacation.mvc.dto.BreakDTO">
			INSERT INTO break (holidayId, empName, empBirth, empNo, position, department, startDate, endDate, useDays, type, totalDays, reason, approval, status )
			VALUES (#{holidayId}, #{empName}, #{empBirth}, #{empNo}, #{position}, #{department}, #{startDate}, #{endDate}, #{useDays}, #{type}, #{totalDays}, #{reason}, #{approval}, #{status})
	</insert>

	<!-- 신청자 정보 가져오기-->
	<select id="employeeVO" parameterType="com.example.vacation.mvc.dto.EmployeeDTO"
			resultType="com.example.vacation.mvc.vo.EmployeeVO">
		SELECT
			empId,
			empName,
			DATE_FORMAT(empBirth, '%Y-%m-%d') as empBirth,
			empNo,
			position,
			email,
			phoneNumber,
			emerNumber,
			bankName,
			accountNumber,
			department,
			DATE_FORMAT(hireDate, '%Y-%m-%d') as hireDate,
			status,
			role,
			totalDays
		FROM employee
		WHERE empNo = #{empNo}
	</select>

	<!--리스트-->
	<sql id="basicTable">
		SELECT ROW_NUMBER() OVER(order by regDate) AS seq,
			   holidayId,
			   empName,
			   DATE_FORMAT(empBirth, '%Y-%m-%d') as empBirth,
			   empNo,
			   position,
			   DATE_FORMAT(startDate, '%Y-%m-%d') as startDate,
			   DATE_FORMAT(endDate, '%Y-%m-%d') as endDate,
			   useDays,
			   type,
			   totalDays,
			   reason,
			   rejectReason,
			   approval,
			   regDate
		FROM break
	</sql>

	<sql id="where">
		WHERE 1=1
		<if test="schDtStart != '' and schDtStart != null">
			AND DATE_FORMAT(regDate, '%Y-%m-%d') <![CDATA[>=]]> #{schDtStart}
		</if>
		<if test="schDtEnd != '' and schDtEnd != null">
			AND DATE_FORMAT(regDate, '%Y-%m-%d') <![CDATA[<=]]> #{schDtEnd}
		</if>
		<if test="schDtStart2 != '' and schDtStart2 != null">
			AND DATE_FORMAT(startDate, '%Y-%m-%d') <![CDATA[>=]]> #{schDtStart}
		</if>
		<if test="schDtEnd2 != '' and schDtEnd2 != null">
			AND DATE_FORMAT(endDate, '%Y-%m-%d') <![CDATA[<=]]> #{schDtEnd}
		</if>
	</sql>

	<select id="breakCount" parameterType="com.example.vacation.mvc.dto.BreakDTO" resultType="integer">
		SELECT count(*) FROM break
		<include refid="where"/>
	</select>

	<select id="breaklist" parameterType="com.example.vacation.mvc.dto.BreakDTO"
			resultType="com.example.vacation.mvc.vo.BreakVO">
		<include refid="basicTable"/>
		<include refid="where"/>
		ORDER BY seq DESC
		LIMIT #{pageSize} OFFSET #{pageOffset}
	</select>

	<!-- 신청자 정보 + 휴가 데이터 가져오기-->
	<select id="breakVO" parameterType="com.example.vacation.mvc.dto.BreakDTO"
			resultType="com.example.vacation.mvc.vo.BreakVO">
		SELECT
			holidayId,
			empName,
			DATE_FORMAT(empBirth, '%Y-%m-%d') as empBirth,
			empNo,
			position,
			department,
			DATE_FORMAT(startDate, '%Y-%m-%d') as startDate,
			DATE_FORMAT(endDate, '%Y-%m-%d') as endDate,
			useDays,
			type,
			totalDays,
			reason,
			rejectReason,
			approval,
			regDate,
			status
		FROM break
		WHERE holidayId = #{holidayId}
	</select>

	<!-- 신청자별 총 신청 휴가일수-->
	<select id="getBreakTotalDay" parameterType="map" resultType="map">
		SELECT COALESCE(SUM(useDays), 0) AS useDays
		FROM break
		WHERE empNo = #{empNo} AND approval IN ('승인', '제출')
	</select>

	<!-- 휴가 삭제 -->
	<delete id="breakDelete" parameterType="com.example.vacation.mvc.dto.BreakDTO">
		DELETE FROM break
		WHERE holidayId = #{holidayId}
	</delete>


</mapper>
